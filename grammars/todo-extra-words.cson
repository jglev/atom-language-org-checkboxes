'scopeName': 'text.gfm-org-checkbox-coloring'
'name': 'Org + Checkboxes'
'injectionSelector': 'comment, text.plain'
'fileTypes': [
  # 'md',
  # 'gfm',
  'org',
  'journal'
]
'patterns': [
  # {include: 'source.gfm'}
  ## {include: 'source.gfm.rmarkdown'}  # From language-rmarkdown package
  # {include: 'text.md'}  # from language-markdown package
  {
    'match': '^\\s*[\\-\\*\\+]\\s*\\[ \\](?=\\s)'
    'name': 'storage.type.class.checkbox-todo'
  }
  {
    'match': '^\\s*[\\-\\*\\+]\\s*\\[\\](?=\\s)'
    'name': 'storage.type.class.checkbox-malformed'
  }
  {
    'match': '^\\s*[\\-\\*\\+]\\s*\\[[Xx]\\](?=\\s)'
    'name': 'storage.type.class.checkbox-done'
  }
  {
    'match': '^\\s*[\\-\\*\\+]\\s*\\[>\\](?=\\s)'
    'name': 'storage.type.class.checkbox-next'
  }
  {
    'match': '^\\s*[\\-\\*\\+]\\s*\\[<\\](?=\\s)'
    'name': 'storage.type.class.checkbox-migrated'
  }
  {
    'match': '^\\s*[\\-\\*\\+]\\s*\\[[/]\\](?=\\s)'
    'name': 'storage.type.class.checkbox-right_now'
  }
  {
    'match': '^\\s*[\\-\\*\\+]\\s*\\[[Oo]\\](?=\\s)'
    'name': 'storage.type.class.checkbox-waiting'
  }
  {
    'match': '(^\\s*[\\-\\*\\+]\\s*\\[-\\])\\s+(.*$)'
    'captures':
      '1':
        'name': 'storage.type.class.checkbox-strikethrough'
      '2':
        'name': 'strikethrough-text'
  }
  {
    'match': '(^\\s*[\\-\\*\\+]\\s*\\[[Vv]\\])\\s+.*(\\(.*?\\))\\s+$'
    'captures':
      '1':
        'name': 'storage.type.class.checkbox-done'
      '2':
        'name': 'storage.type.class.checkbox-done'
  }
  {
    'match': '^\\s*[\\-\\*\\+]\\s*[Oo](?=\\s)'
    'name': 'event'
  }
  # This should come last, to catch any remaining bullets
  # (Alternatively, we could use a negative lookahead here)
  {
    'match': '^\\s*[\\-\\+]\\s*'  # Add '\\*' for markdown support.
    'name': 'bullet'
  }
  {include: 'source.org-mode'}
]
